<html>
<head>
	<title>ecg -- playground </title>
<body style="margin:0px;padding:0px;">
	<canvas id="mycanvas" width="" height="" style="border: 1px solid black;width: 100%;height:100%"></canvas>
	<div style="position:fixed;z-index:2;display:inline-block;top:10px;right:10px">
		<button onclick="play()">Play</button>
		<button onclick="pause()">Pause</button>
		<button onclick="toggleMath()">Sine / Exp</button>
	</div>
</body>
<script type="text/javascript">
	// Global definations
	var canvas = document.getElementById('mycanvas');
	var width = canvas.width = screen.width;
	var height = canvas.height = screen.height;
	var ctx = canvas.getContext('2d');
	var gap = 40;
	var t;
	var exp = true;
	var counter = 0;
	var freq = 20;

	ctx.major = 200;
	ctx.minor = 40;
	ctx.font = '40pt sans-serif';

	// Custom APIs
	ctx.clear = function() {
		this.clearRect(0, 0, width, height);
	}

	ctx.generatePlayground = function(width, height) {
		this.beginPath();
		this.strokeStyle = 'rgba(14, 110, 87, 0.47)';
		this.lineWidth = 8;
		for (var i = this.major; i < width; i+= this.major) {
			this.moveTo(i, 0);
			this.lineTo(i, height);
		};
		this.lineWidth = 1;
		for (var i = this.minor; i < width; i+= this.minor) {
			this.moveTo(i, 0);
			this.lineTo(i, height);
		};

		this.lineWidth = 8;
		for (var i = this.major; i < height; i+= this.major) {
			this.moveTo(0, i);
			this.lineTo(width, i);
		};
		this.lineWidth = 1;
		for (var i = this.minor; i < height; i+= this.minor) {
			this.moveTo(0, i);
			this.lineTo(width, i);
		};
		this.stroke();


	}

	// --- Init ---
	var positions = [];
	for (var i = 0; i < width; i++)
		positions[i] = 0;
	positions[0] = 0;

var state = false;
var statecounter = 1;
var abs;
var x = 0;
	function draw() {
		ctx.clear();
		ctx.fillRect(0,0,width,height);
		ctx.generatePlayground(width,height);

		ctx.beginPath();
		ctx.strokeStyle = 'green';
		ctx.lineWidth = 2;
		ctx.strokeText(Math.floor(counter/20) +"%", 10, 50);
		ctx.moveTo(width+1, height/2);
		for (i = width; i > 0; i--) {
			positions[i] = positions[i-1];
			ctx.lineTo(i, height/2 - positions[i]);
		}
		//Now we are at position 0 -- time for some random!!
		var modifier = 10;
		if (++counter % 160 == 0) {
			modifier = 600;
			state = true;
			statecounter = 1;
		}
		if (state) {
			if (exp) {
				// Exponential method
				if (statecounter == 1) {
					abs = 3 * counter / 20;
				} else if (statecounter != 20) {
					if (statecounter < 20) {
						positions[0] = -1 *abs *Math.exp(-1 * statecounter/2); 
					} else {
						positions[0] = abs *Math.exp(-1 *(20 - statecounter/2));
					}
				} else {
					positions[0] = 0;
				}

				statecounter++;
				if (statecounter == 39 && Math.floor(Math.random() * modifier) % 2 == 0) {
					state = false;
					statecounter = 1;
				} else if (statecounter == 40) {
					state = false;
					statecounter = 1;
				}
			} else {

				// Sine method
				if (statecounter == 1) {
					abs = 3 * counter / 20;
					positions[0] = 0;
				} else if ((statecounter > 1 && statecounter <= 4)
							|| (statecounter > 25 && statecounter <= 29)) {
					var sabs = abs / 5;
					switch(statecounter) {
						case 2: positions[0] = sabs / Math.sqrt(2);			break;
						case 3: positions[0] = sabs;					break;
						case 4: positions[0] = sabs / Math.sqrt(2);			break;
						case 26: positions[0] = -1 * sabs / Math.sqrt(2);	break;
						case 27: positions[0] = -1 * sabs;					break;
						case 28: positions[0] = -1 * sabs / Math.sqrt(2);	break;
						case 29: positions[0] = 0;							break;
					}
				} else {
					var x = ((statecounter - 5) / 5) * Math.PI / 2;
					positions[0] = -1 * abs * Math.sin(x);
				}
				statecounter++;
				if (statecounter == 30) {
					state = false;
					statecounter = 1;
				}
			}
		} else {
			positions[0] = Math.floor(Math.random() * modifier);
		}
		
		//if (Math.floor(Math.random() * modifier) % 2 == 0)
		//	positions[0] = -1 * positions[0];
		ctx.stroke();
		t = setTimeout(function(){draw();}, freq);
	}

	function pause() {
		clearTimeout(t);
	}
	function play() {
		draw();
	}
	function toggleMath() {
		if(exp) exp = false;
		else exp = true;
	}

	draw();
</script>
</head>
</html>